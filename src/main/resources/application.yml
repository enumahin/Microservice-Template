spring:
  application:
    name: template
  config:
    import: "optional:configserver:http://localhost:8071/"
  profiles:
    active:
      - "prod"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:

  h2:
    console:
      enabled: true

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

server:
  port: 8050

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    shutdown:
      access: unrestricted # Allow gracefully shutdown of the microservice
  info:
    env:
      enabled: true # Enable display of the microservice info in the actuator endpoints
  metrics:
    tags:
      application: ${spring.application.name}


eureka:
  instance:
    preferIpAddress: true # prefer the IP address the client registered with
  client:
    fetchRegistry: true # fetch registry details of other microservices
    registerWithEureka: true # Tells Eureka to register with Itself
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

info:
  app:
    name: "template"
    description: "Microservice Template"
    version: "1.0.0"

logging:
  level:
    com:
      alienworkspace:
        cdr:
          template: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10s